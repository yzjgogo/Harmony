Context总结：
 1：UIAbilityContext 属于UIAbility
 A6_UIAbility_start_mode.ets
 A7_UIAbility_base_use.ets

 2：UIContext 属于窗口window
 D:\Harmony\Study\Harmony\entry\src\main\ets\pages\A9_UIAbility_operation.ets
 D:\Harmony\Study\Harmony\entry\src\main\ets\entryability\TargetAbility.ets
 UIContext = (window.Window).getUIContext()
 可以通过UIContext获取router,然后通过router打开页面
 可以通过UIContext获取UIObserver（参考：A13_Navigation_observer.ets）

 A3_component_observer_Page.ets 用到了UIContext

Window总结：window.Window
D:\Harmony\Study\Harmony\entry\src\main\ets\pages\A9_UIAbility_operation.ets
D:\Harmony\Study\Harmony\entry\src\main\ets\entryability\TargetAbility.ets
window.WindowStage.getMainWindow((err,window)=>{}) 这个window就是window.Window
UIContext = (window.Window).getUIContext()


UIObserver
获取方式1：UIObserver = uiContext.getUIObserver();
参考：EntryAbility.ets里的getMainWindow里、A17_Navigation_lifecycle_observer.ets
获取方式2：import { uiObserver } from '@kit.ArkUI' 直接使用这个导入的uiObserver
参考：A18_Navigation_NavDestinationSwitchInfo.ets








 https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-custom-components-freeze-V5
 @Component({ freezeWhenInactive: true })
 struct MyComponent {
 }

  @Entry装饰的自定义组件将作为UI页面的入口。在单个UI页面中，最多可以使用@Entry装饰一个自定义组件。@Entry可以接受一个可选的LocalStorage的参数或者一个可选的EntryOptions参数。
  在https://developer.huawei.com/consumer/cn/training/course/slightMooc/C101717496870909384里搜索@Entry了解更多

   @Reusable：
   @Reusable装饰的自定义组件具备可复用能力


状态管理
   https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/arkts-state-management-overview-V5



.alignItems(HorizontalAlign.Start)
.justifyContent(FlexAlign.SpaceAround)
适用与所有的容器组件？例如Column,Row, Flex,List?
    alignItems:侧轴上子元素的排列方式
    justifyContent:主轴上子元素的排列方式


//A4_ForEach_3.ets 里涉及到了手势
      .parallelGesture(
        PanGesture({ direction: PanDirection.Up, distance: 1 })
          .onActionStart((event) => {
            console.error("执行-onActionStart")
          })
          .onActionUpdate((event)=>{
            console.error("执行-onActionUpdate")
          })
          .onActionEnd((event)=>{
            console.error("执行-onActionEnd")
          })
          .onActionCancel(()=>{
            console.error("执行-onActionCancel")
          })
      )


使用AppStorage/LocalStorage进行数据同步：https://developer.huawei.com/consumer/cn/training/course/slightMooc/C101717497122909477